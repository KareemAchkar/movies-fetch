{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","onDelete","className","type","onClick","String","imdbId","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","onAdd","useState","setQuery","newMovie","setMovie","hasError","setHasError","isLoading","setIsLoading","isAdded","setIsAdded","LoadMovie","a","loadedMovie","addedMovie","newRes","Plot","imdbID","Poster","onSubmit","event","preventDefault","htmlFor","id","placeholder","value","onChange","target","disabled","cn","setTimeout","style","opacity","App","setMovies","useEffect","storedMovies","localStorage","getItem","JSON","parse","setItem","stringify","updatedMovies","filter","newObject","every","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bbd3c642.chunk.js","sourcesContent":["import { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n// eslint-disable-next-line max-len\n// import logo from '../../540-5402522_delete-garbage-remove-trash-trash-can-iicon-delete.png';\n\ntype Props = {\n  movie: Movie | null,\n  onDelete: (imdbId: string) => void\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie, onDelete }) => {\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <button\n          type=\"button\"\n          onClick={() => onDelete(String(movie?.imdbId))}\n        >\n          x\n        </button>\n        <figure className=\"image is-4by3\">\n          s\n          <img\n            data-cy=\"moviePoster\"\n            src={movie?.imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {movie?.description}\n          <br />\n          <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n  onDelete: (imdbId: string) => void;\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies, onDelete }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n        onDelete={onDelete}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=ccd3f1fe';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","/* eslint-disable quote-props */\nimport React, { ChangeEvent, useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport { ResponseError } from '../../types/ReponseError';\n\ntype Props = {\n  onAdd: (newObj: Movie | null) => void\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAdd }) => {\n  const [query, setQuery] = useState('');\n  const [newMovie, setMovie] = useState<Movie | null>(null);\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isAdded, setIsAdded] = useState(false);\n\n  const onQuery = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const onError = () => {\n    setHasError(true);\n  };\n\n  const onLoading = () => {\n    setIsLoading(true);\n  };\n\n  const onAddList = () => {\n    setIsAdded(true);\n    setTimeout(() => {\n      onAdd(newMovie);\n      setMovie(null);\n\n      setIsLoading(false);\n      setIsAdded(false);\n    }, 1300);\n  };\n\n  const LoadMovie = async () => {\n    onLoading();\n    try {\n      const loadedMovie = await getMovie(query);\n      const movieError = loadedMovie as ResponseError;\n\n      if (movieError.Response === 'False') {\n        onError();\n      } else {\n        const newRes = loadedMovie as MovieData;\n        const addedMovie: Movie = {\n          title: query,\n          description: newRes.Plot,\n          imdbId: newRes.imdbID,\n          imgUrl: newRes.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : newRes.Poster,\n          imdbUrl: `https://www.imdb.com/title/${newRes.imdbID}`,\n        };\n\n        setMovie(addedMovie);\n      }\n    } catch (error) {\n      // console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          LoadMovie();\n          setQuery('');\n          setHasError(false);\n        }}\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            <span className=\"movie-find-title\">Movie title</span>\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={query}\n              onChange={onQuery}\n            />\n          </div>\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={`button is-dark ${!query && 'is-disabled'} ${isLoading && 'is-loading'}`}\n              disabled={!query || isLoading}\n            >\n              Find a movie\n            </button>\n          </div>\n          {newMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className={cn('button is-primary', { 'isAdded': isAdded })}\n                onClick={onAddList}\n                style={{ opacity: isAdded ? 0.6 : 1 }}\n                disabled={isAdded}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        {newMovie && (\n          <>\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard\n              movie={newMovie}\n              onDelete={() => { }}\n            />\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  useEffect(() => {\n    const storedMovies = localStorage.getItem('movies');\n\n    if (storedMovies) {\n      setMovies(JSON.parse(storedMovies));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('movies', JSON.stringify(movies));\n  }, [movies]);\n\n  const onAdd = (newObject: Movie | null) => {\n    if (newObject !== null && movies.every((movie) => movie.imdbId\n      !== newObject.imdbId)) {\n      // Check if a movie with the same imdbId already exists in the movies list\n      setMovies([...movies, newObject]);\n    }\n  };\n\n  const onDelete = (imdbId: string | undefined) => {\n    const updatedMovies = movies.filter((movie) => movie.imdbId !== imdbId);\n\n    setMovies(updatedMovies);\n  };\n\n  return (\n    <>\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <h1 className=\"page-title\">My Movies </h1>\n          <MoviesList movies={movies} onDelete={onDelete} />\n\n        </div>\n\n        <div className=\"sidebar\">\n          <FindMovie\n            onAdd={onAdd}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}